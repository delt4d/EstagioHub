services:
    database:
        container_name: postgres
        image: postgres:latest
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - 5432:5432
        networks:
            - net
        volumes:
            - postgres_data:/var/lib/postgresql/data

    wait-database:
        container_name: check-db-started
        image: jwilder/dockerize:0.6.1
        depends_on:
            database:
                condition: service_healthy
        networks:
            - net
        command: 'dockerize -wait=tcp://${DB_HOST}:5432'

    adminer:
        container_name: postgres-admin
        image: adminer
        environment:
            ADMINER_DEFAULT_SERVER: postgres
        depends_on:
            - wait-database
        ports:
            - 8080:8080
        networks:
            - net

    server:
        container_name: estagios-server
        build: ./back-end
        ports:
            - 8000:8000
        networks:
            - net
        depends_on:
            - wait-database
            - redis
            - mail
        environment:
            DATABASE_URL:
            DB_HOST:
            DB_PORT:
            DB_NAME:
            DB_USER:
            DB_PASS:
            REDIS_URL:
            FRONTEND_URL:
            EMAIL_HOST:
            EMAIL_PORT:
            EMAIL_SENDER:
            EMAIL_USER:
            EMAIL_PASS:
            DEFAULT_ADMIN_NAME:
            DEFAULT_ADMIN_EMAIL:
            DEFAULT_ADMIN_PASSWORD:
            NODE_ENV:
        command: sh -c "npm run migrate && npm start"

    mail:
        container_name: smtp-mail-server
        image: axllent/mailpit
        ports:
            - 1025:1025
            - 8025:8025
        environment:
            MP_SMTP_AUTH_ACCEPT_ANY: true
            MP_SMTP_AUTH_ALLOW_INSECURE: true
            MP_VERBOSE: true
        networks:
            - net

    redis:
        container_name: redis-session-store
        image: redis
        command: redis-server --save
        ports:
            - 6379:6379
        networks:
            - net

    redis-commander:
        container_name: redis-commander
        image: rediscommander/redis-commander:latest
        environment:
            REDIS_HOST:
            REDIS_PORT:
        depends_on:
            - redis
        ports:
            - 8081:8081
        networks:
            - net

networks:
    net:
        driver: bridge

volumes:
    postgres_data:
